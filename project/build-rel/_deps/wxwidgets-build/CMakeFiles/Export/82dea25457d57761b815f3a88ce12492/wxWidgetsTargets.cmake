# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.12 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.12")
   message(FATAL_ERROR "CMake >= 2.8.12 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.12...3.30)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS wx::wxregex wx::wxjpeg wx::wxpng wx::wxtiff wx::wxbase wx::wxnet wx::wxcore wx::wxadv wx::wxaui wx::wxhtml wx::wxpropgrid wx::wxribbon wx::wxrichtext wx::wxwebview wx::wxscintilla wx::wxlexilla wx::wxstc wx::wxxrc wx::wxmedia wx::wxgl wx::wxqa wx::wxxml)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target wx::wxregex
add_library(wx::wxregex STATIC IMPORTED)

set_target_properties(wx::wxregex PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_FILE_OFFSET_BITS=64"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Threads::Threads>"
)

# Create imported target wx::wxjpeg
add_library(wx::wxjpeg STATIC IMPORTED)

set_target_properties(wx::wxjpeg PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_FILE_OFFSET_BITS=64"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Threads::Threads>"
)

# Create imported target wx::wxpng
add_library(wx::wxpng STATIC IMPORTED)

set_target_properties(wx::wxpng PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_FILE_OFFSET_BITS=64"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Threads::Threads>;/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/libz.tbd"
)

# Create imported target wx::wxtiff
add_library(wx::wxtiff STATIC IMPORTED)

set_target_properties(wx::wxtiff PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_FILE_OFFSET_BITS=64"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Threads::Threads>;/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/libz.tbd;\$<LINK_ONLY:wx::wxjpeg>"
)

# Create imported target wx::wxbase
add_library(wx::wxbase STATIC IMPORTED)

set_target_properties(wx::wxbase PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Threads::Threads>;/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/libz.tbd;\$<LINK_ONLY:wx::wxregex>;/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/libiconv.tbd;-framework CoreFoundation;-framework Security;-framework Carbon;-framework Cocoa;-framework IOKit;-framework QuartzCore"
)

# Create imported target wx::wxnet
add_library(wx::wxnet STATIC IMPORTED)

set_target_properties(wx::wxnet PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;\$<LINK_ONLY:Threads::Threads>"
)

# Create imported target wx::wxcore
add_library(wx::wxcore STATIC IMPORTED)

set_target_properties(wx::wxcore PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;\$<LINK_ONLY:Threads::Threads>;\$<LINK_ONLY:wx::wxjpeg>;\$<LINK_ONLY:wx::wxpng>;\$<LINK_ONLY:wx::wxtiff>;\$<LINK_ONLY:WebP::webp>;\$<LINK_ONLY:WebP::webpdemux>;-framework AudioToolbox;-framework WebKit"
)

# Create imported target wx::wxadv
add_library(wx::wxadv STATIC IMPORTED)

set_target_properties(wx::wxadv PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;wx::wxcore;\$<LINK_ONLY:Threads::Threads>"
)

# Create imported target wx::wxaui
add_library(wx::wxaui STATIC IMPORTED)

set_target_properties(wx::wxaui PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;wx::wxcore;\$<LINK_ONLY:Threads::Threads>"
)

# Create imported target wx::wxhtml
add_library(wx::wxhtml STATIC IMPORTED)

set_target_properties(wx::wxhtml PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;wx::wxcore;\$<LINK_ONLY:Threads::Threads>"
)

# Create imported target wx::wxpropgrid
add_library(wx::wxpropgrid STATIC IMPORTED)

set_target_properties(wx::wxpropgrid PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;wx::wxcore;\$<LINK_ONLY:Threads::Threads>"
)

# Create imported target wx::wxribbon
add_library(wx::wxribbon STATIC IMPORTED)

set_target_properties(wx::wxribbon PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;wx::wxcore;\$<LINK_ONLY:Threads::Threads>"
)

# Create imported target wx::wxrichtext
add_library(wx::wxrichtext STATIC IMPORTED)

set_target_properties(wx::wxrichtext PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;wx::wxcore;\$<LINK_ONLY:Threads::Threads>;\$<LINK_ONLY:wx::wxhtml>;\$<LINK_ONLY:wx::wxxml>"
)

# Create imported target wx::wxwebview
add_library(wx::wxwebview STATIC IMPORTED)

set_target_properties(wx::wxwebview PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;wx::wxcore;\$<LINK_ONLY:Threads::Threads>;-framework WebKit"
)

# Create imported target wx::wxscintilla
add_library(wx::wxscintilla STATIC IMPORTED)

set_target_properties(wx::wxscintilla PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_FILE_OFFSET_BITS=64;__WX__"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Threads::Threads>"
)

# Create imported target wx::wxlexilla
add_library(wx::wxlexilla STATIC IMPORTED)

set_target_properties(wx::wxlexilla PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_FILE_OFFSET_BITS=64"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Threads::Threads>"
)

# Create imported target wx::wxstc
add_library(wx::wxstc STATIC IMPORTED)

set_target_properties(wx::wxstc PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;wx::wxcore;\$<LINK_ONLY:Threads::Threads>;\$<LINK_ONLY:wx::wxscintilla>;\$<LINK_ONLY:wx::wxlexilla>"
)

# Create imported target wx::wxxrc
add_library(wx::wxxrc STATIC IMPORTED)

set_target_properties(wx::wxxrc PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;wx::wxcore;\$<LINK_ONLY:Threads::Threads>;\$<LINK_ONLY:wx::wxhtml>;\$<LINK_ONLY:wx::wxxml>"
)

# Create imported target wx::wxmedia
add_library(wx::wxmedia STATIC IMPORTED)

set_target_properties(wx::wxmedia PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;wx::wxcore;\$<LINK_ONLY:Threads::Threads>;-framework AVFoundation;-framework CoreMedia;-weak_framework AVKit"
)

# Create imported target wx::wxgl
add_library(wx::wxgl STATIC IMPORTED)

set_target_properties(wx::wxgl PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;wx::wxcore;\$<LINK_ONLY:Threads::Threads>;OpenGL::GL;/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks/OpenGL.framework;/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks/OpenGL.framework"
)

# Create imported target wx::wxqa
add_library(wx::wxqa STATIC IMPORTED)

set_target_properties(wx::wxqa PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;wx::wxcore;\$<LINK_ONLY:Threads::Threads>;wx::wxxml"
)

# Create imported target wx::wxxml
add_library(wx::wxxml STATIC IMPORTED)

set_target_properties(wx::wxxml PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "_UNICODE;__WXOSX_COCOA__;__WXMAC__;__WXOSX__;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/lib/wx/include/osx_cocoa-unicode-static-3.3;${_IMPORT_PREFIX}/include/wx-3.3"
  INTERFACE_LINK_LIBRARIES "wx::wxbase;\$<LINK_ONLY:Threads::Threads>;/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/libexpat.tbd"
)

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/wxWidgetsTargets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  if(CMAKE_VERSION VERSION_LESS "3.28"
      OR NOT DEFINED _cmake_import_check_xcframework_for_${_cmake_target}
      OR NOT IS_DIRECTORY "${_cmake_import_check_xcframework_for_${_cmake_target}}")
    foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
      if(NOT EXISTS "${_cmake_file}")
        message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
      endif()
    endforeach()
  endif()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# Make sure the targets which have been exported in some other
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "WebP::webp" "WebP::webpdemux" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
